\input texinfo
@documentencoding UTF-8

@ifnottex
@paragraphindent 0
@end ifnottex
@node Top
@top Top

@quotation
@strong{HÁZI FELADAT}@*
Programozás alapjai 2.
@end quotation
Végleges

@quotation
Kurely Mózes@*
F0QEL1@*
2023. május. 28.
@end quotation
@multitable @columnfractions 1.00 
@headitem 
@quotation
@strong{TARTALOM}

1. Feladat
.................................................................................................................................
2

2. Feladatspecifikáció
.............................................................................................................
2

3. Pontosított feladatspecifikáció
...............................................................................................
3

4. Megvalósítás
.......................................................................................................................
4

5. Osztályok funkciói
..............................................................................................................
5

6. Main és bemenetek
.............................................................................................................
6
@end quotation
@end multitable

@quotation
@strong{1.Feladat}
@end quotation
@multitable @columnfractions 1.00 
@headitem 
@quotation
@strong{1.1 Telefonkönyv}
@end quotation
@end multitable

@multitable @columnfractions 0.50 0.50 
@headitem 
@quotation
Tervezze meg egy telefonkönyv alkalmazás egyszerűsített
objektummodelljét, majd valósítsa azt meg! A telefonkönyvben kezdetben
az alábbi adatokat akarjuk tárolni, de később bővíteni akarunk:
@end quotation
 @tab 
@item 
•
 @tab @quotation
Név (vezetéknév, keresztnév)
@end quotation
@item 
•
 @tab @quotation
becenév
@end quotation
@item 
•
 @tab @quotation
cím
@end quotation
@item 
•
 @tab @quotation
munkahelyi szám
@end quotation
@item 
•
 @tab @quotation
privát szám
@end quotation
@item 
@end multitable

@multitable @columnfractions 0.50 0.50 
@headitem 
@quotation
Az alkalmazással minimum a következő műveleteket kívánjuk elvégezni:
@end quotation
 @tab 
@item 
•
 @tab @quotation
adatok felvétele
@end quotation
@item 
•
 @tab @quotation
adatok törlése
@end quotation
@item 
•
 @tab @quotation
listázás
@end quotation
@end multitable

@multitable @columnfractions 1.00 
@headitem 
@quotation
A rendszer lehet bővebb funkcionalitású (pl. módosítás, keresés), ezért
nagyon fontos, hogy jól határozza meg az objektumokat és azok
felelősségét. Demonstrálja a működést külön modulként fordított
tesztprogrammal! A megoldáshoz @strong{ne} használjon STL tárolót!
@end quotation
@end multitable

@quotation
@strong{2.Feladatspecifikáció}

A @strong{Telefonkönyv} osztálynak @emph{aktMéret} attribútuma lesz ami
azt fogja megadni, hogy hány kontakt tartozik hozzá, illetv@emph{e
maguk} a @emph{kontaktok} egy tárolóban, valamint a dinamikusan nővő
@emph{méret} attribútuma határozza meg az @emph{éppen max}imális
kontaktok számát.

A telefonkönyvben létre lehet hozni kontaktot már egy @emph{név}vel és
egy @emph{telefonszám}mal. A @strong{Kontakt} lesz az ős osztály. Ebből
fog leszármazni @emph{a} @strong{Barát} akin@emph{ek lesz beceneve},
@emph{privát} @emph{száma}. Illetve az @strong{Üzletfél} akinek
@emph{cég} attribútuma és @emph{beosztás}a lesz. Tová@emph{bbá ha
s}z@emph{akmai} @emph{segíts}éget szeretnénk akkor nem @emph{ár}t ha a
tudjuk @emph{külön} elmenteni a mesteremberek telefonszámát. Amiben az
@strong{Ezermester} leszármazott osztály illetve az ahhoz tartozó
@emph{szakma} attribútum fog segíteni. A kontárok elkerülése végett,
hozzájuk lehet rövid @emph{megjegyzést is írni}, hogy el ne
felejtkezzünk negatív(esetleg pozitív) tapasztalatainkról.

@emph{Keresés:}@*
Lehet keresni tetszőleges szöveg alapján. Ha megtalálható a kontakt
valamelyik attribútumában az a szövegrész akkor kilistázza azt. Továbbá
generikus keresés is

megvalósítható, mellyel tetszőleges szempont szerint lehet keresni a
telefonkönyv elemeire. pl.: barátok listázása

@emph{Létrehozás:}@*
Először is ki kell választanunk, hogy milyen kontaktok szeretnénk
létrehozni. Majd az ott megjelenő attribútumok megadása után tudjuk
menteni a személy adatait.

@emph{Módosítás:}@*
Ki tudunk jelölni kontaktot a sorszáma alapján módosításra. Ekkor tudjuk
majd módosítani.

A telefonkönyvet lehet másolni illetve be lehet olvasni fájlból, illetve
módosítás után mentésre is kerül txt-be.
@end quotation
- 2 -

@quotation
@strong{3.Pontosított feladatspecifikáció}

A telefonkönyv program felhasználói felülete egy telefonon lévő
telefonkönyvet fog modellezni.

Az alábbi menüpontok lesznek:@*
1, Keresés@*
2, Új kontakt hozzáadása@*
3, Kontaktok listázása@*
4, Meglévő kontakt módosítása@*
5, Törles

@strong{1, Keresés:} Tetszőleges szöveg megadása után kilistázza azokat
a kontaktokat amelyeknek bármelyik attribútuma tartalmazza az adott
szöveget.
@end quotation
@strong{2, Új kontakt hozzáadása:} A kontakt típusának kiválasztása után
megadhatóak a megfelelő

@quotation
attribútumok, és menteni lehet a kontaktot.

@strong{3, Kontaktok listázása:} Ki lehet választani hogy milyen
kontaktokat jelenítsünk meg.

A, mindet@*
B, csak a barát típusú kontaktokat@*
U, csak az Üzletfél típusú kontaktokat@*
E, csak az Ezermester típusú kontaktokat@*
@strong{4, Meglévő kontakt módosítása.} Megjelenik minden kontaktnak
csak a neve. Ez alapján kiválasztunk egy kontaktot a sorszáma szerint.
Megjelenítjük az aktuális adatait. Majd alatta megadhatjuk azok új
értékeit.

@strong{5, Törlés:} D menüponthoz hasonlóan kiválasztunk egy kontaktot a
sorszáma alapjának és eltávolítjuk azt a Kontaktok közül.

A menüben bizonyos karakterekkel tudunk navigálni. Vissza is léphetünk a
főmenübe.
@end quotation
- 3 -

@quotation
@strong{4.Megvalósítás}

@strong{UML:}@*
A Telefonkönyvet a már félkövére jelzett osztályokkal, és az aláhúzással
jelzett attribútumokkal fogom megvalósítani:
@end quotation
@image{vertopal_523d145b5ab74b638bb45702203f5f10/media/image1,7.85139in,4.99444in,,png}

@quotation
Ezeken kívül szükség lesz még a Menu osztályra illetve Predikátum
osztályokra a Generikus keresés megvalósításához.:

@image{vertopal_523d145b5ab74b638bb45702203f5f10/media/image2,7.15278in,1.91528in,,png}
@end quotation
- 4 -

@quotation
@strong{Tárolás}@*
A telefonkönyvet txt-ben tároljuk illetve onnan be tudjuk olvasni. Ennek
sorai a következő képpen fognak felépülni:

@strong{kontakt típusát azonosító id; az ősosztályt azonosító id;
kontakt_neve; telefonszáma; kontakt típusának megfelelő további
adattagok.}

példa1: egy barát kontaktot tartalmazó sor:@*
B;K;Nagy János;06305608551;06701689548;Jancsi;

példa2: egy üzletfelet tartalmazó sor:@*
U;K;Kovács István;065012347895;MAV;vonatkerék pumpáló;

@strong{5.Osztályok funkciói}

@strong{Minden osztály minden függvényének leírása megtalálható a
programfájlokban.}

@strong{Kontakt:}@*
Olyan ős osztály melyben nevet es telefonszámot lehet tarolni.

@strong{Barát:}@*
A Kontakt osztály leszármazott osztálya. Ugyan úgy van neve es
telefonszáma de e mellett van beceneve es privát telefonszáma.

@strong{Ezermester:}@*
A Kontakt osztály leszármazott osztálya. Ugyan úgy van neve es
telefonszáma de e mellett van szakma es megjegyzés attribútuma.

@strong{Üzletfél:}@*
A Kontakt osztály leszármazott osztálya. Ugyan úgy van neve es
telefonszáma de e mellett van cég es beosztás attribútuma.

@strong{Telefonkönyv:}@*
Kontaktokra mutató pointereket taroló Telefonkönyv osztály. Van egy
tárolója: kontaktok, maximális mérete: meret és egy aktuális méretét
nyilvántartó attribútuma: aktMeret.

@strong{Menü:}@*
Menü osztály a telefonkönyv alkalmazás irányításához. Van egy állapota
ami azt tartja nyilván, hogy az alkalmazás menüje éppen milyen
állapotban van: allapot.

Predikátum osztályok:@*
Ezeknek az osztályoknak a segítségével valósítható meg generikus
keresés.

- @strong{BenneVanE}:@*
predikátum osztály arra hogy a kontakt tartalmazza-e az adott szót.

- @strong{UzletfelE}:@*
predikátum osztály arra, hogy üzletfél-e az adott kontakt.

- @strong{EzermesterE}:@*
predikátum osztály arra, hogy ezermester-e az adott kontakt.

- @strong{BaratE}:@*
predikátum osztály arra, hogy ezermester-e az adott kontakt.

-
@end quotation
- 5 -

@quotation
@strong{6.Main és bemenetek}@*
A feltöltött main fájl valósítja meg a Telefonkönyv alkalmazást az
előbbi osztályok segítségével.

A megadott példa bemenetek az alkalmazás álltalános működését
szimulálják, úgy, hogy az az alkalmazás minden részletét tesztelje.
@end quotation
- 6 -

@bye
